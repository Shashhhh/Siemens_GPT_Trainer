{"version":3,"sources":["use-websocket.ts"],"names":["useEffect","useRef","useState","useCallback","useMemo","DEFAULT_OPTIONS","ReadyState","UNPARSABLE_JSON_OBJECT","createOrJoinSocket","getUrl","websocketWrapper","useWebSocket","url","options","connect","lastMessage","setLastMessage","readyState","setReadyState","lastJsonMessage","JSON","parse","data","e","convertedUrl","webSocketRef","startRef","reconnectCount","messageQueue","webSocketProxy","optionsCache","readyStateFromUrl","current","undefined","CONNECTING","UNINSTANTIATED","stringifiedQueryParams","queryParams","stringify","sendMessage","message","OPEN","send","push","sendJsonMessage","getWebSocket","share","removeListeners","expectClose","start","protectedSetLastMessage","protectedSetReadyState","state","prev","splice","forEach"],"mappings":"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","sourcesContent":["import { useEffect, useRef, useState, useCallback, useMemo, MutableRefObject } from 'react';\r\nimport { DEFAULT_OPTIONS, ReadyState, UNPARSABLE_JSON_OBJECT } from './constants';\r\nimport { createOrJoinSocket } from './create-or-join';\r\nimport { getUrl } from './get-url';\r\nimport websocketWrapper from './proxy';\r\nimport type {\r\n  Options,\r\n  ReadyStateState,\r\n  SendMessage,\r\n  SendJsonMessage,\r\n  WebSocketMessage,\r\n  WebSocketHook,\r\n  WebSocketEventMap,\r\n} from './types';\r\n\r\nexport const useWebSocket = (\r\n  url: string | (() => string | Promise<string>) | null,\r\n  options: Options = DEFAULT_OPTIONS,\r\n  connect: boolean = true,\r\n): WebSocketHook => {\r\n  const [lastMessage, setLastMessage] = useState<WebSocketEventMap['message']>({});\r\n  const [readyState, setReadyState] = useState<ReadyStateState>({});\r\n  const lastJsonMessage = useMemo(() => {\r\n    if (lastMessage) {\r\n      try {\r\n        return JSON.parse(lastMessage.data);\r\n      } catch (e) {\r\n        return UNPARSABLE_JSON_OBJECT;\r\n      }\r\n    }\r\n    return null;\r\n  }, [lastMessage]);\r\n  const convertedUrl = useRef<string>(\"\");\r\n  const webSocketRef = useRef<WebSocket | null>(null);\r\n  const startRef = useRef<() => void>(() => { });\r\n  const reconnectCount = useRef<number>(0);\r\n  const messageQueue = useRef<WebSocketMessage[]>([]);\r\n  const webSocketProxy = useRef<WebSocket | null>(null)\r\n  const optionsCache = useRef<Options>(options);\r\n\r\n  const readyStateFromUrl: ReadyState =\r\n    convertedUrl.current && readyState[convertedUrl.current] !== undefined ?\r\n      readyState[convertedUrl.current] :\r\n      url !== null && connect === true ?\r\n        ReadyState.CONNECTING :\r\n        ReadyState.UNINSTANTIATED;\r\n\r\n  const stringifiedQueryParams = options.queryParams ? JSON.stringify(options.queryParams) : null;\r\n\r\n  const sendMessage: SendMessage = useCallback(message => {\r\n    if (webSocketRef.current && webSocketRef.current.readyState === ReadyState.OPEN) {\r\n      webSocketRef.current.send(message);\r\n    } else {\r\n      messageQueue.current.push(message);\r\n    }\r\n  }, []);\r\n\r\n  const sendJsonMessage: SendJsonMessage = useCallback(message => {\r\n    sendMessage(JSON.stringify(message));\r\n  }, [sendMessage]);\r\n\r\n  const getWebSocket = useCallback((): WebSocket => {\r\n    if (optionsCache.current?.share !== true && null !== webSocketRef.current) {\r\n      return webSocketRef.current;\r\n    }\r\n\r\n    if (webSocketProxy.current === null && webSocketRef.current && startRef.current) {\r\n      webSocketProxy.current = websocketWrapper(webSocketRef.current, startRef);\r\n    } else {\r\n      return webSocketProxy.current as WebSocket;\r\n    }\r\n\r\n    return webSocketProxy.current;\r\n  }, [optionsCache]);\r\n\r\n  useEffect(() => {\r\n    if (url !== null && connect === true) {\r\n      let removeListeners: () => void;\r\n      let expectClose = false;\r\n\r\n      const start = async () => {\r\n        convertedUrl.current = await getUrl(url, optionsCache);\r\n\r\n        const protectedSetLastMessage = (message: WebSocketEventMap['message']) => {\r\n          if (!expectClose) {\r\n            setLastMessage(message);\r\n          }\r\n        };\r\n\r\n        const protectedSetReadyState = (state: ReadyState) => {\r\n          if (!expectClose) {\r\n            setReadyState(prev => ({\r\n              ...prev,\r\n              [convertedUrl.current]: state,\r\n            }));\r\n          }\r\n        };\r\n        removeListeners = createOrJoinSocket(\r\n          webSocketRef as MutableRefObject<WebSocket>,\r\n          convertedUrl.current,\r\n          protectedSetReadyState,\r\n          optionsCache,\r\n          protectedSetLastMessage,\r\n          startRef,\r\n          reconnectCount,\r\n        );\r\n      };\r\n\r\n      startRef.current = () => {\r\n        if (!expectClose) {\r\n          if (webSocketProxy.current) webSocketProxy.current = null;\r\n          removeListeners?.();\r\n          start();\r\n        }\r\n      };\r\n\r\n      start();\r\n      return () => {\r\n        expectClose = true;\r\n        if (webSocketProxy.current) webSocketProxy.current = null;\r\n        removeListeners?.();\r\n        setLastMessage({});\r\n      };\r\n    }else{\r\n      return;\r\n    }\r\n  }, [url, connect, stringifiedQueryParams, optionsCache, sendMessage]);\r\n\r\n  useEffect(() => {\r\n    if (readyStateFromUrl === ReadyState.OPEN) {\r\n      messageQueue.current.splice(0).forEach(message => {\r\n        sendMessage(message);\r\n      });\r\n    }\r\n  }, [readyStateFromUrl]);\r\n\r\n  return {\r\n    sendMessage,\r\n    sendJsonMessage,\r\n    lastMessage,\r\n    lastJsonMessage,\r\n    readyState: readyStateFromUrl,\r\n    getWebSocket,\r\n  };\r\n};\r\n"]}