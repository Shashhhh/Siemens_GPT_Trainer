{"version":3,"sources":["socket-io.ts"],"names":["parseSocketIOUrl","url","isSecure","test","strippedProtocol","replace","removedFinalBackSlack","protocol","SOCKET_IO_PATH","appendQueryParams","params","alreadyHasParams","stringified","Object","entries","reduce","next","key","value","slice","setUpSocketIOPing","socketInstance","ping","send","SOCKET_IO_PING_CODE","setInterval","SOCKET_IO_PING_INTERVAL"],"mappings":";;;;;;;AAAA;;AAGO,MAAMA,gBAAgB,GAAIC,GAAD,IAAiB;AAC/C,MAAIA,GAAJ,EAAS;AACP,UAAMC,QAAQ,GAAG,aAAaC,IAAb,CAAkBF,GAAlB,CAAjB;AACA,UAAMG,gBAAgB,GAAGH,GAAG,CAACI,OAAJ,CAAY,wBAAZ,EAAsC,EAAtC,CAAzB;AACA,UAAMC,qBAAqB,GAAGF,gBAAgB,CAACC,OAAjB,CAAyB,KAAzB,EAAgC,EAAhC,CAA9B;AACA,UAAME,QAAQ,GAAGL,QAAQ,GAAG,KAAH,GAAW,IAApC;AAEA,WAAQ,GAAEK,QAAS,MAAKD,qBAAsB,GAAEE,yBAAe,EAA/D;AACD;;AACD,SAAOP,GAAP;AACD,CAVM;;;;AAYA,MAAMQ,iBAAiB,GAAG,CAACR,GAAD,EAAcS,MAAmB,GAAG,EAApC,EAAwCC,gBAAyB,GAAG,KAApE,KAAsF;AACrH,QAAMC,WAAW,GAAI,GAAEC,MAAM,CAACC,OAAP,CAAeJ,MAAf,EAAuBK,MAAvB,CAA8B,CAACC,IAAD,EAAO,CAACC,GAAD,EAAMC,KAAN,CAAP,KAAwB;AAC3E,WAAOF,IAAI,GAAI,GAAEC,GAAI,IAAGC,KAAM,GAA9B;AACD,GAFsB,EAEpB,EAFoB,EAEhBC,KAFgB,CAEV,CAFU,EAEP,CAAC,CAFM,CAEH,EAFpB;AAIA,SAAQ,GAAElB,GAAI,GAAEU,gBAAgB,GAAG,GAAH,GAAS,GAAI,GAAEC,WAAY,EAA3D;AACD,CANM;;;;AAQA,MAAMQ,iBAAiB,GAAIC,cAAD,IAA+B;AAC9D,QAAMC,IAAI,GAAG,MAAMD,cAAc,CAACE,IAAf,CAAoBC,8BAApB,CAAnB;;AAEA,SAAOC,WAAW,CAACH,IAAD,EAAOI,kCAAP,CAAlB;AACD,CAJM","sourcesContent":["import { SOCKET_IO_PING_INTERVAL, SOCKET_IO_PATH, SOCKET_IO_PING_CODE } from './constants';\r\nimport type { QueryParams } from './types';\r\n\r\nexport const parseSocketIOUrl = (url: string) => {\r\n  if (url) {\r\n    const isSecure = /^https|wss/.test(url);\r\n    const strippedProtocol = url.replace(/^(https?|wss?)(:\\/\\/)?/, '');\r\n    const removedFinalBackSlack = strippedProtocol.replace(/\\/$/, '');\r\n    const protocol = isSecure ? 'wss' : 'ws';\r\n\r\n    return `${protocol}://${removedFinalBackSlack}${SOCKET_IO_PATH}`;\r\n  }\r\n  return url;\r\n};\r\n\r\nexport const appendQueryParams = (url: string, params: QueryParams = {}, alreadyHasParams: boolean = false): string => {\r\n  const stringified = `${Object.entries(params).reduce((next, [key, value]) => {\r\n    return next + `${key}=${value}&`;\r\n  }, '').slice(0, -1)}`;\r\n\r\n  return `${url}${alreadyHasParams ? '&' : '?'}${stringified}`;\r\n};\r\n\r\nexport const setUpSocketIOPing = (socketInstance: WebSocket) => {\r\n  const ping = () => socketInstance.send(SOCKET_IO_PING_CODE);\r\n\r\n  return setInterval(ping, SOCKET_IO_PING_INTERVAL);\r\n};\r\n"]}