{"version":3,"sources":["get-url.ts"],"names":["getUrl","url","optionsRef","convertedUrl","parsedUrl","current","fromSocketIO","parsedWithQueryParams","queryParams"],"mappings":";;;;;;;AACA;;AAGO,MAAMA,MAAM,GAAG,OACpBC,GADoB,EAEpBC,UAFoB,KAGjB;AACH,MAAIC,YAAJ;;AAEA,MAAI,OAAOF,GAAP,KAAe,UAAnB,EAA+B;AAC7BE,IAAAA,YAAY,GAAG,MAAMF,GAAG,EAAxB;AACD,GAFD,MAEO;AACLE,IAAAA,YAAY,GAAGF,GAAf;AACD;;AAED,QAAMG,SAAS,GAAGF,UAAU,CAACG,OAAX,CAAmBC,YAAnB,GAChB,gCAAiBH,YAAjB,CADgB,GAEhBA,YAFF;AAIA,QAAMI,qBAAqB,GAAGL,UAAU,CAACG,OAAX,CAAmBG,WAAnB,GAC5B,iCACEJ,SADF,EAEEF,UAAU,CAACG,OAAX,CAAmBG,WAFrB,EAGEN,UAAU,CAACG,OAAX,CAAmBC,YAHrB,CAD4B,GAM5BF,SANF;AAQA,SAAOG,qBAAP;AACD,CAzBM","sourcesContent":["import type { MutableRefObject } from 'react';\r\nimport { parseSocketIOUrl, appendQueryParams } from './socket-io';\r\nimport type { Options } from './types';\r\n\r\nexport const getUrl = async (\r\n  url: string | (() => string | Promise<string>),\r\n  optionsRef: MutableRefObject<Options>,\r\n) => {\r\n  let convertedUrl: string;\r\n\r\n  if (typeof url === 'function') {\r\n    convertedUrl = await url();\r\n  } else {\r\n    convertedUrl = url;\r\n  }\r\n\r\n  const parsedUrl = optionsRef.current.fromSocketIO ?\r\n    parseSocketIOUrl(convertedUrl) :\r\n    convertedUrl;\r\n\r\n  const parsedWithQueryParams = optionsRef.current.queryParams ?\r\n    appendQueryParams(\r\n      parsedUrl,\r\n      optionsRef.current.queryParams,\r\n      optionsRef.current.fromSocketIO,\r\n    ) :\r\n    parsedUrl;\r\n\r\n  return parsedWithQueryParams;\r\n};\r\n"]}