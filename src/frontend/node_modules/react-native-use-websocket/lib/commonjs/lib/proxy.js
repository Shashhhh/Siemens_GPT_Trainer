"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.websocketWrapper = void 0;

const websocketWrapper = (webSocket, start) => {
  return new Proxy(webSocket, {
    get: (obj, key) => {
      const val = obj[key];
      if (key === 'reconnect') return start;

      if (typeof val === 'function') {
        console.error('Calling methods directly on the websocket is not supported at this moment. You must use the methods returned by useWebSocket.'); //Prevent error thrown by invoking a non-function

        return () => {};
      } else {
        return val;
      }
    },
    set: (obj, key, val) => {
      if (/^on/.test(key)) {
        console.warn('The websocket\'s event handlers should be defined through the options object passed into useWebSocket.');
        return false;
      } else {
        obj[key] = val;
        return true;
      }
    }
  });
};

exports.websocketWrapper = websocketWrapper;
var _default = websocketWrapper;
exports.default = _default;
//# sourceMappingURL=proxy.js.map